#!/usr/bin/env python3
"""
Script para simular una petici√≥n desde el frontend
"""
import requests
import json

def test_frontend_connection():
    """
    Simular una petici√≥n DELETE desde el frontend
    """
    print("üîç Simulando petici√≥n desde el frontend...")
    
    # Headers que enviar√≠a el frontend
    headers = {
        'Origin': 'http://localhost:3000',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token'
    }
    
    # Probar primero el endpoint de health
    try:
        print("üì° Probando endpoint /health...")
        response = requests.get("http://localhost:5002/health", headers=headers)
        print(f"Status: {response.status_code}")
        print(f"Headers CORS: {dict(response.headers)}")
        
        if response.status_code == 200:
            print("‚úÖ Endpoint /health responde correctamente")
        else:
            print("‚ùå Endpoint /health no responde correctamente")
            return False
            
    except Exception as e:
        print(f"‚ùå Error conectando al servidor: {e}")
        return False
    
    # Probar una petici√≥n DELETE (sin autenticaci√≥n real)
    try:
        print("\nüì° Probando petici√≥n DELETE...")
        delete_data = {
            "role_name": "TestRole"
        }
        
        response = requests.delete(
            "http://localhost:5002/rol",
            json=delete_data,
            headers=headers
        )
        
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        
        # Deber√≠a devolver 401 (no autorizado) pero no error de CORS
        if response.status_code in [401, 403, 404]:
            print("‚úÖ Petici√≥n DELETE llega al servidor (CORS funciona)")
            return True
        else:
            print("‚ùå Problema con la petici√≥n DELETE")
            return False
            
    except Exception as e:
        print(f"‚ùå Error en petici√≥n DELETE: {e}")
        return False

def main():
    """
    Funci√≥n principal
    """
    print("üöÄ Probando conectividad frontend-backend...\n")
    
    if test_frontend_connection():
        print("\n‚úÖ CONECTIVIDAD FUNCIONANDO")
        print("üí° El problema podr√≠a estar en:")
        print("   - Token de autenticaci√≥n inv√°lido")
        print("   - URL incorrecta en el frontend")
        print("   - Servidor no corriendo")
    else:
        print("\n‚ùå PROBLEMA DE CONECTIVIDAD")
        print("üí° Verifica que:")
        print("   - El servidor est√© corriendo en puerto 5002")
        print("   - No haya firewall bloqueando")
        print("   - Las URLs sean correctas")

if __name__ == "__main__":
    main()
